<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.sincq.itsblog.dao.BlogMapper">
    <resultMap id="Blog" type="org.sincq.itsblog.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="subscribeMe" column="subscribeMe"/>
        <result property="shareStatement" column="shareStatement"/>
        <result property="commentable" column="commentable"/>
        <result property="commentCount" column="commentCount"/>
        <result property="publish" column="publish"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="typeId" column="typeId"/>
        <result property="userId" column="userId"/>
        <result property="userName" column="userName"/>
        <result property="typeName" column="typeName"/>
    </resultMap>

    <insert id="saveBlog" parameterType="org.sincq.itsblog.entity.Blog">
        insert into blog.t_blog (id, title, content, flag, views, subscribeMe, shareStatement, commentable,
                                 commentCount, publish,
                                 recommend, createTime, updateTime, typeId, userId, userName, typeName)
        values (#{id}, #{title}, #{content}, #{flag}, #{views}, #{subscribeMe},
                #{shareStatement}, #{commentable}, #{publish}, #{commentCount}, #{recommend}, #{createTime},
                #{updateTime}, #{typeId}, #{userId}, #{userName}, #{typeName});
    </insert>

    <delete id="deleteBlog">
        delete
        from t_blog
        where id = #{id}
    </delete>

    <update id="updateBlogById">
        update t_blog
        set title          = #{title},
            content        = #{content},
            flag           = #{flag},
            views          = #{views},
            subscribeMe    = #{subscribeMe},
            shareStatement = #{shareStatement},
            commentable    = #{commentable},
            commentCount   = #{commentCount},
            publish        = #{publish},
            recommend      = #{recommend},
            createTime     = #{createTime},
            updateTime     = #{updateTime},
            typeId         = #{typeId},
            userId         = #{userId},
            userName       = #{userName},
            typeName       = #{typeName}
        where id = #{id}
    </update>

    <update id="updateTitle">
        update t_blog
        set title=#{title}
        where id = #{id}
    </update>

    <update id="updateContent">
        update t_blog
        set content=#{content}
        where id = #{id}
    </update>

    <update id="updateFlag">
        update t_blog
        set flag=#{flag}
        where id = #{id}
    </update>

    <update id="updateViews">
        update t_blog
        set views=#{views}
        where id = #{id}
    </update>

    <update id="updateCommentCount">
        update t_blog
        set commentCount=#{commentCount}
        where id = #{id}
    </update>

    <update id="updateSubscribeMe">
        update t_blog
        set subscribeMe=#{subscribeMe}
        where id = #{id}
    </update>


    <update id="updateShareStatement">
        update t_blog
        set shareStatement = #{shareStatement}
        where id = #{id};
    </update>

    <select id="getBlogById" resultType="org.sincq.itsblog.entity.Blog">
        select *
        from t_blog
        where id = #{id}
    </select>

    <select id="listAllBlog" resultType="org.sincq.itsblog.entity.Blog">
        select *
        from t_blog
    </select>

    <!--    <select id="listBlogInPage" resultType="org.sincq.itsblog.entity.Blog">-->
    <!--        BEGIN-->
    <!--        SET-->
    <!--            N := numPerPage * (pageNum - 1);-->
    <!--        RETURN-->
    <!--        (-->
    <!--            SELECT *-->
    <!--            FROM t_blog-->
    <!--            LIMIT N, numPerPage-->
    <!--        );-->
    <!--        END-->
    <!--        SELECT *-->
    <!--        FROM t_blog-->
    <!--    </select>-->

    <select id="listAllRecommendBlog" resultType="org.sincq.itsblog.entity.Blog">
        SELECT *
        FROM t_blog
        WHERE recommend = true
    </select>
    <select id="getSearchBlog" resultType="org.sincq.itsblog.entity.Blog">
        <bind name="pattern" value="'%' + query + '%'" />
        select *
        from t_blog b
        where b.title like #{pattern} or b.content like  #{pattern}
        order by updateTime desc
    </select>
    <!--查询出文章评论数量并更新-->
    <update id="updateCommentCountById" parameterType="java.lang.Integer">
        update t_blog blog set blog.commentCount = (
            select count(*) from t_comment comment where comment.blog_id = #{id} and blog.id = #{id}
        ) WHERE blog.id = #{id}
    </update>
</mapper>

        <!--        org.springframework.jdbc.BadSqlGrammarException:-->
        <!--        ### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_time' in 'order clause'-->
        <!--        ### The error may exist in file [C:\Users\laoha\IdeaProjects\ItsBlog\target\classes\mapper\BlogMapper.xml]-->
        <!--        ### The error may involve defaultParameterMap-->
        <!--        ### The error occurred while setting parameters-->
        <!--        ### SQL: SELECT * FROM t_blog order by update_time desc  LIMIT ?-->
        <!--        ### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_time' in 'order clause'-->
        <!--        ; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'update_time' in 'order clause'-->